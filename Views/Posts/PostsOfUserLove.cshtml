@model IEnumerable<Remood_Place.Models.Post>
@using System.Security.Claims


@{
    ViewData["Title"] = "Mypackage";
    Layout = "_headerfooter";

}

<!DOCTYPE html>
<html lang="zxx">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Ogani Template">
    <meta name="keywords" content="Ogani, unica, creative, html">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    @* <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Oswald:300,400|Roboto|Open+Sans:300,400,700">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="/offernew/style.css"> *@
    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@200;300;400;600;900&display=swap" rel="stylesheet">

    <!-- Css Styles -->
    <link rel="stylesheet" href="offers/css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="offers/css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="offers/css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="offers/css/nice-select.css" type="text/css">
    <link rel="stylesheet" href="offers/css/jquery-ui.min.css" type="text/css">
    <link rel="stylesheet" href="offers/css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="offers/css/slicknav.min.css" type="text/css">
    <link rel="stylesheet" href="offers/css/style.css" type="text/css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="card/card.css">
    <style>
        .form-control.col-12.w-100 {
            width: 100%;
        }

        .button_back {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: orange;
            border: none;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0px 0px 0px 4px rgba(180, 160, 255, 0.253);
            cursor: pointer;
            transition-duration: 0.3s;
            overflow: hidden;
        }

        .svgIcon {
            transition-duration: 0.3s;
        }

            .svgIcon path {
                fill: white;
            }

        .button_back:hover {
            width: 140px;
            border-radius: 50px;
            transition-duration: 0.3s;
            background-color: rgba(161, 149, 37, 0.712);
            align-items: center;
        }

            .button_back:hover .svgIcon {
                /* width: 20px; */
                transition-duration: 0.3s;
                transform: translateY(-200%);
            }

        .button_back::before {
            position: absolute;
            bottom: -20px;
            content: "Create Post";
            color: white;
            /* transition-duration: .3s; */
            font-size: 0px;
        }

        .button_back:hover::before {
            font-size: 13px;
            opacity: 1;
            bottom: unset;
            /* transform: translateY(-30px); */
            transition-duration: 0.3s;
        }
        .discount-banner {
            z-index: 1; /* Ensure it's above the image */
            padding: 5px; /* Adjust padding as needed */
        }

            .discount-banner .badge {
                font-size: 14px; /* Adjust font size as needed */
            }

        .custom-scrollbar::-webkit-scrollbar {
            width: 8px;
        }

        .custom-scrollbar::-webkit-scrollbar-track {
            background-color: #343a40;
        }

        .custom-scrollbar::-webkit-scrollbar-thumb {
            background-color: #6c757d;
            border-radius: 3px;
            border: 1px solid #343a40;
        }

            .custom-scrollbar::-webkit-scrollbar-thumb:hover {
                background-color: #555;
            }

        .card-container {
            perspective: 700px;
        }

        .card-flip {
            position: relative;
            width: 100%;
            transform-style: preserve-3d;
            height: auto;
            transition: all 0.5s ease-out;
            background: white;
            border: none;
        }

            .card-flip div {
                backface-visibility: hidden;
                transform-style: preserve-3d;
                height: 100%;
                width: 100%;
                border: none;
            }

        .front {
            position: relative;
            z-index: 1;
        }

        .back {
            position: relative;
            z-index: 0;
            transform: rotateY(-180deg);
        }

        .card-container:hover .card-flip {
            transform: rotateY(180deg);
        }

        .o_name {
            position: relative;
            border: 1px solid #ff000085;
            outline: none;
            background-color: transparent;
            padding: 15px 30px;
            border-radius: 30px;
            z-index: 2;
            cursor: pointer;
            color: #ffff;
            overflow: hidden;
            text-align: center;
            font-size: 20px;
            font-weight: 800;
            font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
        }

            .o_name::before {
                content: "";
                position: absolute;
                top: 20%;
                left: 20%;
                transform: translate(-50%, -50%);
                width: 40px;
                height: 40px;
                background-color: #ff480091;
                filter: blur(5px);
                z-index: -1;
                transition: width 0.9s ease-out, height 0.9s ease-out, background-color 0.3s ease-out;
                border-radius: 50%;
            }

            .o_name:hover::before {
                border-radius: 20px;
                width: 300px;
                height: 200px;
                background-color: #ff7b00a1;
            }

        #IMG {
            transition: transform 1s ease;
            border-radius: 3px;
        }

            #IMG:hover {
                transform: scale(1.05);
            }
    </style>
</head>

<body class="m-0 p-0 packageBody">
    <div class="container-fluid my-3 align-text-center" style="background-color: orange;border-radius: 8px;">
        <h4 class="col-12" style="text-align: center; color:white"> Favourit Posts</h4>
    </div>
    @* <div class="d-md-flex col-12"> *@
        <div class="row m-0">
        @foreach (var item in Model)
                        {
        <div class="col-md-6 col-lg-6 d-flex">
            <div id="packages" class="container col-12">
                <div class="centered">
                    <div class="container">
                            <input type="hidden" id="postId" value="@item.Id" />
                                <div class="col-md-12">
                                    <div class="card mt-4">
                                        <!-- Image Carousel -->
                                        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                                            <ol class="carousel-indicators">
                                                @for (var i = 0; i < item.ImagePaths.Count; i++)
                                                {
                                                    <li data-target="#carouselExampleIndicators" data-slide-to="@i" class="@(i==0 ? "active" : "")"></li>
                                                }
                                            </ol>
                                            <div class="carousel-inner">
                                                @for (var i = 0; i < item.ImagePaths.Count; i++)
                                                {
                                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                                        <img src="@item.ImagePaths[i]" id="IMG" class="d-block w-100" style="height:500px;width:500px;" alt="Image @(i + 1)">
                                                    </div>
                                                }
                                            </div>
                                            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                                <span class="sr-only">Previous</span>
                                            </a>
                                            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                                <span class="sr-only">Next</span>
                                            </a>
                                        </div>

                                        <!-- Card Body -->
                                        <div class="card-body">
                                            <div class="card-title d-flex justify-content-between align-items-center">
                                                <h2>@item.Name</h2>
                                            </div>

                                            <hr>
                                            <p class="card-text">@item.Bio</p>
                                        </div>
                                        <!-- Buttons -->

                                            <form class="col-12" action="@Url.Action("Details", "Posts")" method="get">
                                                <input type="hidden" name="id" value="@item.Id" />
                                                <button type="submit" class="col-12 btn btn-warning" id="btn_package">
                                                    See More..
                                                </button>
                                            </form>
                                        
                                    </div>
                                </div>
                        
                    </div>
                </div>
            </div>
        </div>
        }
        </div>
        <!-- Main content --> 


    @* </div> *@





    <!-- Js Plugins -->
    <script src="offers/js/jquery-3.3.1.min.js"></script>
    <script src="offers/js/bootstrap.min.js"></script>
    <script src="offers/js/jquery.nice-select.min.js"></script>
    <script src="offers/js/jquery-ui.min.js"></script>
    <script src="offers/js/jquery.slicknav.js"></script>
    <script src="offers/js/mixitup.min.js"></script>
    <script src="offers/js/owl.carousel.min.js"></script>
    <script src="offers/js/main.js"></script>
    <script src="card/card.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    @* ads card script *@
    <script>
    $(document).ready(function() {
    var front = document.getElementsByClassName("front");
    var back = document.getElementsByClassName("back");

    var highest = 0;
    var absoluteSide = "";

    for (var i = 0; i < front.length; i++) {
    if (front[i].offsetHeight > back[i].offsetHeight) {
    if (front[i].offsetHeight > highest) {
    highest = front[i].offsetHeight;
    absoluteSide = ".front";
    }
    } else if (back[i].offsetHeight > highest) {
    highest = back[i].offsetHeight;
    absoluteSide = ".back";
    }
    }
    $(".front").css("height", highest);
    $(".back").css("height", highest);
    $(absoluteSide).css("position", "absolute");
    });
    </script>

    @* add to favorite *@
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Event delegation to handle dynamically added buttons
            $(document).on('click', '.add-to-favorites, .remove-from-favorites', function () {
                var button = $(this);
                var postId = button.data('postid');

                if (button.hasClass('remove-from-favorites')) {
                    removeFromFavorites(postId, button);
                } else {
                    addToFavorites(postId, button);
                }
            });

            function addToFavorites(postId, button) {
                button.prop('disabled', true); // Disable the button to prevent multiple clicks
                $.ajax({
                    url: '/Posts/AddToFavorites?postId=' + postId,
                    type: 'POST',
                    success: function (data) {
                        // Handle success, maybe show a success message
                        button.text('Remove from Favorites'); // Change button text
                        button.removeClass('add-to-favorites').addClass('remove-from-favorites'); // Change class
                        button.prop('disabled', false); // Re-enable the button
                    },
                    error: function (xhr, status, error) {
                        // Handle error, maybe show an error message
                        alert('Error adding item to favorites: ' + error);
                        button.prop('disabled', false); // Re-enable the button in case of error
                    }
                });
            }

            function removeFromFavorites(postId, button) {
                button.prop('disabled', true);
                $.ajax({
                    url: '/Posts/RemoveFromFavorites?id=' + postId,
                    type: 'POST',
                    success: function (data) {
                        // Handle success, maybe show a success message
                        button.text('Add to Favorites'); // Change button text
                        button.removeClass('remove-from-favorites').addClass('add-to-favorites'); // Change class
                        button.prop('disabled', false); // Re-enable the button
                    },
                    error: function (xhr, status, error) {
                        // Handle error, maybe show an error message
                        alert('Error removing item from favorites: ' + error);
                        button.prop('disabled', false); // Re-enable the button in case of error
                    }
                });
            }
        });
    </script>

    
    <script>
        $(document).ready(function () {
            // Toggle comment input field visibility
            $(".toggle-comment").click(function () {
                var postId = $(this).data("postid");
                $("#commentInput_" + postId).toggleClass("d-none");
            });

            // Submit comment
            $(".submit-comment").click(function () {
                var postId = $(this).data("postid");
                var commentText = $("#commentInput_" + postId + " input[name='commentText']").val();

                // Make sure comment text is not empty
                if (commentText.trim() === "") {
                    alert("Please enter a comment.");
                    return;
                }
                // Add the comment to the DOM immediately
                var newCommentHtml = '<div class="card mt-2"><div class="card-body">' + commentText + '</div></div>';
                $("#AddComment_" + postId).append(newCommentHtml);

                // Update the comment count displayed on the button
                var button = $(".toggle-comment[data-postid='" + postId + "']");
                updateCommentCount(button);

                // Send comment to the server for saving (optional)
                $.post("/Posts/AddComment", { postId: postId, commentText: commentText }, function () {
                    // Clear input field after successful submission
                    $("#commentInput_" + postId + " input[name='commentText']").val("");
                });
            });

            // Function to update the comment count displayed on the button
            function updateCommentCount(button) {
                var currentCount = parseInt(button.text().split(' ')[1]); // Extract current count from button text
                button.text('Comments ' + (currentCount + 1)); // Increment count and update button text
            }
        });
    </script>

    @* add and show Like *@
    <script>
        $(document).ready(function () {
            // Event delegation to handle dynamically added buttons
            $(document).on('click', '.add-to-Likes, .remove-from-Likes', function () {
                var button = $(this);
                var postId = button.data('postid');

                if (button.hasClass('remove-from-Likes')) {
                    removeFromLikes(postId, button);
                } else {
                    addToLikes(postId, button);
                }
            });

            function addToLikes(postId, button) {
                button.prop('disabled', true); // Disable the button to prevent multiple clicks
                $.ajax({
                    url: '/Posts/AddToLikes?postId=' + postId,
                    type: 'POST',
                    success: function (data) {
                        // Handle success, maybe show a success message
                        updateButton(button, true); // Update button text and count
                    },
                    error: function (xhr, status, error) {
                        // Handle error, maybe show an error message
                        alert('Error adding item to Likes: ' + error);
                        button.prop('disabled', false); // Re-enable the button in case of error
                    }
                });
            }

            function removeFromLikes(postId, button) {
                button.prop('disabled', true);
                $.ajax({
                    url: '/Posts/RemoveFromLikes?id=' + postId,
                    type: 'POST',
                    success: function (data) {
                        // Handle success, maybe show a success message
                        updateButton(button, false); // Update button text and count
                    },
                    error: function (xhr, status, error) {
                        // Handle error, maybe show an error message
                        alert('Error removing item from Likes: ' + error);
                        button.prop('disabled', false); // Re-enable the button in case of error
                    }
                });
            }

            function updateButton(button, isLiked) {
                var likeCountSpan = button.find('span');
                var currentText = likeCountSpan.text();
                var currentCount = parseInt(currentText.split(' ')[1]); // Extract current like count

                // Update button text and count based on like status
                if (isLiked) {
                    likeCountSpan.text('Liked ' + (currentCount + 1));
                    button.removeClass('add-to-Likes').addClass('remove-from-Likes');
                    button.removeClass('card_btns-comment').addClass('card_btns-fav');
                } else {
                    likeCountSpan.text('Like ' + (currentCount - 1));
                    button.removeClass('remove-from-Likes').addClass('add-to-Likes');
                    button.removeClass('card_btns-fav').addClass('card_btns-comment');
                }

                button.prop('disabled', false); // Re-enable the button
            }
        });
    </script>

</body>

</html>